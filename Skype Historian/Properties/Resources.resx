<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChatsExported" xml:space="preserve">
    <value>{0} chats of {1} exported</value>
  </data>
  <data name="CheckingForSkypePageNote" xml:space="preserve">
    <value>Skype Historian needs Skype to be started. If Skype is not started then Skype Historian will start it for you.</value>
  </data>
  <data name="CheckingForSkypePageTitle" xml:space="preserve">
    <value>Starting Skype</value>
  </data>
  <data name="ExportingPageClosing" xml:space="preserve">
    <value>Finishing... {0} of {1}</value>
  </data>
  <data name="ExportingPageNote1" xml:space="preserve">
    <value>Skype Historian is now exporting your Skype chats...</value>
  </data>
  <data name="ExportingPageNote2" xml:space="preserve">
    <value>Please, switch to the Skype window and allow Skype Historian to access your chats. Do NOT close Skype during exporting.</value>
  </data>
  <data name="ExportingPageTitle" xml:space="preserve">
    <value>Exporting</value>
  </data>
  <data name="FinishingPageBusyText" xml:space="preserve">
    <value>Sending the feedback...</value>
  </data>
  <data name="FinishingPageFeedbackWatermark" xml:space="preserve">
    <value>Want to send a feedback? Write up to 500 characters and press Finish</value>
  </data>
  <data name="FinishingPageShowExported" xml:space="preserve">
    <value>Show exported data</value>
  </data>
  <data name="FinishingPageStartAgain" xml:space="preserve">
    <value>Start again</value>
  </data>
  <data name="FinishingPageTitle" xml:space="preserve">
    <value>Finishing</value>
  </data>
  <data name="MainWindowConfirmClose" xml:space="preserve">
    <value>The exporting is in progress and will be interrupted if you'll close the window. This will cause the exported data to be corrupted. Close anyway?</value>
  </data>
  <data name="MainWindowFinish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="MainWindowFlattr" xml:space="preserve">
    <value>Support this program on Flattr!</value>
  </data>
  <data name="MainWindowLeftBarExporting" xml:space="preserve">
    <value>Exporting</value>
  </data>
  <data name="MainWindowLeftBarFinishing" xml:space="preserve">
    <value>Finishing</value>
  </data>
  <data name="MainWindowLeftBarOptions" xml:space="preserve">
    <value>Export Options</value>
  </data>
  <data name="MainWindowLeftBarSkype" xml:space="preserve">
    <value>Starting Skype</value>
  </data>
  <data name="MainWindowLeftBarWelcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="MainWindowNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="MainWindowUpdateAvailable" xml:space="preserve">
    <value>The new version of Skype Historian is released. Would you like to go to the website to download the latest version?</value>
  </data>
  <data name="MainWindowWebsite" xml:space="preserve">
    <value>http://eigenein.info/skype-historian/</value>
  </data>
  <data name="MessagesProcessed" xml:space="preserve">
    <value>{0} messages processed</value>
  </data>
  <data name="OutputTypePageAnd" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="OutputTypePageByMembers" xml:space="preserve">
    <value>By members</value>
  </data>
  <data name="OutputTypePageByMembersThenByMonth" xml:space="preserve">
    <value>By members, then by month</value>
  </data>
  <data name="OutputTypePageByMonthThenByDayThenByMembers" xml:space="preserve">
    <value>By month, then by day, then by members</value>
  </data>
  <data name="OutputTypePageByMonthThenByMembers" xml:space="preserve">
    <value>By month, then by members</value>
  </data>
  <data name="OutputTypePageChooseThis" xml:space="preserve">
    <value>Choose this if don't know</value>
  </data>
  <data name="OutputTypePageCompress" xml:space="preserve">
    <value>Compress exported data</value>
  </data>
  <data name="OutputTypePageDateFilterError" xml:space="preserve">
    <value>You haven't specified one or both dates within the date filter. Please, specify the date.</value>
  </data>
  <data name="OutputTypePageDateFilterTitle" xml:space="preserve">
    <value>Only messages between</value>
  </data>
  <data name="OutputTypePageFolderBrowserTitle" xml:space="preserve">
    <value>Select a folder to export to:</value>
  </data>
  <data name="OutputTypePageGroup" xml:space="preserve">
    <value>Group all messages</value>
  </data>
  <data name="OutputTypePageNote" xml:space="preserve">
    <value>Log in to Skype and choose the appropriate output:</value>
  </data>
  <data name="OutputTypePageSaveAsTitle" xml:space="preserve">
    <value>Select a file to export to</value>
  </data>
  <data name="OutputTypePageTextFiles" xml:space="preserve">
    <value>Text Files</value>
  </data>
  <data name="OutputTypePageTitle" xml:space="preserve">
    <value>Where to export</value>
  </data>
  <data name="OutputTypePageUseNicknames" xml:space="preserve">
    <value>Always use nicknames in chat titles</value>
  </data>
  <data name="StatusFinished" xml:space="preserve">
    <value>Congratulations, your Skype chats were successfully exported! You may close this window.</value>
  </data>
  <data name="StatusSkypeCannotGetChatCollection" xml:space="preserve">
    <value>Skype Historian cannot access your chats. Make sure you're logged in and allowed Skype Historian to access your chats.</value>
  </data>
  <data name="StatusSkypeInitializationFailed" xml:space="preserve">
    <value>Skype Historian was unable to initialize Skype. Reinstalling the program may fix the problem.</value>
  </data>
  <data name="StatusSkypeStartFailed" xml:space="preserve">
    <value>Skype Historian was unable to start Skype automatically. Please, try to start Skype manually and run Skype Historian again.</value>
  </data>
  <data name="StatusUnknownFailure" xml:space="preserve">
    <value>An unexpected error has occured. Status Code: {0}. Sorry. Try to run exporting again.</value>
  </data>
  <data name="WaitingForSkypeString" xml:space="preserve">
    <value>Awaiting for Skype response...</value>
  </data>
  <data name="WelcomePageNote" xml:space="preserve">
    <value>This software is not designed to collect or transfer your personal data. However, it makes no warranty, thus use this software at your personal risk.</value>
  </data>
  <data name="WelcomePageSkypeInstalled" xml:space="preserve">
    <value>You should have Skype installed.</value>
  </data>
  <data name="WelcomePageTitle" xml:space="preserve">
    <value>Welcome to Skype Historian</value>
  </data>
  <data name="WelcomePageWelcomeLabel" xml:space="preserve">
    <value>The program will help you avoid losing your important chats by saving them to different formats. Please, click "Next" to proceed.</value>
  </data>
</root>